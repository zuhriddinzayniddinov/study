//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTsaProxy
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://v1.tsaproxy.plugin.server.dsv.eimzo.yt.uz/", ConfigurationName="ServiceTsaProxy.TsaProxy")]
    public interface TsaProxy
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://v1.tsaproxy.plugin.server.dsv.eimzo.yt.uz/TsaProxy/getTimeStampTokenForSig" +
            "natureRequest", ReplyAction="http://v1.tsaproxy.plugin.server.dsv.eimzo.yt.uz/TsaProxy/getTimeStampTokenForSig" +
            "natureResponse")]
        System.Threading.Tasks.Task<ServiceTsaProxy.getTimeStampTokenForSignatureResponse> getTimeStampTokenForSignatureAsync(ServiceTsaProxy.getTimeStampTokenForSignatureRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getTimeStampTokenForSignatureRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getTimeStampTokenForSignature", Namespace="http://v1.tsaproxy.plugin.server.dsv.eimzo.yt.uz/", Order=0)]
        public ServiceTsaProxy.getTimeStampTokenForSignatureRequestBody Body;
        
        public getTimeStampTokenForSignatureRequest()
        {
        }
        
        public getTimeStampTokenForSignatureRequest(ServiceTsaProxy.getTimeStampTokenForSignatureRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class getTimeStampTokenForSignatureRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string signatureHex;
        
        public getTimeStampTokenForSignatureRequestBody()
        {
        }
        
        public getTimeStampTokenForSignatureRequestBody(string signatureHex)
        {
            this.signatureHex = signatureHex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getTimeStampTokenForSignatureResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getTimeStampTokenForSignatureResponse", Namespace="http://v1.tsaproxy.plugin.server.dsv.eimzo.yt.uz/", Order=0)]
        public ServiceTsaProxy.getTimeStampTokenForSignatureResponseBody Body;
        
        public getTimeStampTokenForSignatureResponse()
        {
        }
        
        public getTimeStampTokenForSignatureResponse(ServiceTsaProxy.getTimeStampTokenForSignatureResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class getTimeStampTokenForSignatureResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        public getTimeStampTokenForSignatureResponseBody()
        {
        }
        
        public getTimeStampTokenForSignatureResponseBody(string @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface TsaProxyChannel : ServiceTsaProxy.TsaProxy, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class TsaProxyClient : System.ServiceModel.ClientBase<ServiceTsaProxy.TsaProxy>, ServiceTsaProxy.TsaProxy
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public TsaProxyClient() : 
                base(TsaProxyClient.GetDefaultBinding(), TsaProxyClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.TsaProxyPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TsaProxyClient(EndpointConfiguration endpointConfiguration) : 
                base(TsaProxyClient.GetBindingForEndpoint(endpointConfiguration), TsaProxyClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TsaProxyClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(TsaProxyClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TsaProxyClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(TsaProxyClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TsaProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceTsaProxy.getTimeStampTokenForSignatureResponse> ServiceTsaProxy.TsaProxy.getTimeStampTokenForSignatureAsync(ServiceTsaProxy.getTimeStampTokenForSignatureRequest request)
        {
            return base.Channel.getTimeStampTokenForSignatureAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceTsaProxy.getTimeStampTokenForSignatureResponse> getTimeStampTokenForSignatureAsync(string signatureHex)
        {
            ServiceTsaProxy.getTimeStampTokenForSignatureRequest inValue = new ServiceTsaProxy.getTimeStampTokenForSignatureRequest();
            inValue.Body = new ServiceTsaProxy.getTimeStampTokenForSignatureRequestBody();
            inValue.Body.signatureHex = signatureHex;
            return ((ServiceTsaProxy.TsaProxy)(this)).getTimeStampTokenForSignatureAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TsaProxyPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TsaProxyPort))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.122.22:9090/dsvs/tsaproxy/v1");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return TsaProxyClient.GetBindingForEndpoint(EndpointConfiguration.TsaProxyPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return TsaProxyClient.GetEndpointAddress(EndpointConfiguration.TsaProxyPort);
        }
        
        public enum EndpointConfiguration
        {
            
            TsaProxyPort,
        }
    }
}
